/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/dts-v1/;
#include <nordic/nrf52840_qiaa.dtsi>
#include <dt-bindings/zmk/matrix_transform.h>


/ {
    model = "IXKB";
    compatible = "frg,ixkb";

    chosen {
        zephyr,console = &cdc_acm_uart;
        zephyr,shell-uart = &cdc_acm_uart;
        zephyr,uart-mcumgr = &cdc_acm_uart;
        zephyr,bt-mon-uart = &cdc_acm_uart;
        zephyr,bt-c2h-uart = &cdc_acm_uart;
        zephyr,code-partition = &code_partition;
        zephyr,sram = &sram0;
        zephyr,flash = &flash0;
        zmk,kscan = &kscan0;
        zmk,matrix_transform = &default_transform;
        zmk,battery = &vbatt;
    };

    sensors {
        compatible = "zmk,keymap-sensors";
        sensors = <&encoder_1>;
        //sensors = <&encoder_1 &joystick0>;
        triggers-per-rotation = <20>;
    };

    kscan0: kscan_0 {
        compatible = "zmk,kscan-gpio-matrix";
        label = "KSCAN";
        diode-direction = "col2row";
        col-gpios
            = <&shift_reg  3 (GPIO_ACTIVE_LOW)>
            , <&shift_reg  4 (GPIO_ACTIVE_LOW)>
            , <&shift_reg  5 (GPIO_ACTIVE_LOW)>
            , <&shift_reg  6 (GPIO_ACTIVE_LOW)>
            , <&shift_reg  7 (GPIO_ACTIVE_LOW)>
            , <&shift_reg  8 (GPIO_ACTIVE_LOW)>
            , <&shift_reg  9 (GPIO_ACTIVE_LOW)>
            , <&shift_reg 10 (GPIO_ACTIVE_LOW)>
            , <&shift_reg 11 (GPIO_ACTIVE_LOW)>
            , <&shift_reg 12 (GPIO_ACTIVE_LOW)>
            , <&shift_reg 13 (GPIO_ACTIVE_LOW)>
            , <&shift_reg 14 (GPIO_ACTIVE_LOW)>
            , <&shift_reg 15 (GPIO_ACTIVE_LOW)>
            , <&shift_reg  0 (GPIO_ACTIVE_LOW)>
            , <&shift_reg  1 (GPIO_ACTIVE_LOW)>
            , <&shift_reg  2 (GPIO_ACTIVE_LOW)>
            ;

        row-gpios
            = <&gpio1  0 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 22 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 20 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            , <&gpio0 17 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>
            ;
    };

    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <18>;
        rows = <4>;
    
        map = <
        RC(2,0) RC(1,0) RC(0,0)         RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9) RC(0,10) RC(0,11) RC(0,12)         RC(0,13) RC(0,14) RC(0,15)
                                        RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9) RC(1,10) RC(1,11) RC(1,12)         RC(1,13) RC(1,14) RC(1,15)
                RC(3,0)                 RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(2,10) RC(2,11) RC(2,12)         RC(2,13) RC(2,14) RC(2,15)
                                        RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5)     RC(3,6)     RC(3,8) RC(3,9) RC(3,10) RC(3,11) RC(3,12)         RC(3,13) RC(3,14) RC(3,15)
        >;
    };

    leds {
        compatible = "gpio-leds";
        blue_led: led_0 {
            gpios = <&gpio0 10 GPIO_ACTIVE_HIGH>;
            label = "Blue LED";
        };
    };

    encoder_1: encoder_1 {
        compatible = "alps,ec11";
        label = "Encoder";
        a-gpios = <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        b-gpios = <&gpio0 13 (GPIO_ACTIVE_HIGH | GPIO_PULL_UP)>;
        steps = <20>;
    };

    vbatt: vbatt {
        compatible = "zmk,battery-voltage-divider";
        label = "BATTERY";
        io-channels = <&adc 2>;
        output-ohms = <2000000>;
        full-ohms = <(2000000 + 806000)>;
    };

    joystick: joystick {
        compatible = "zmk,input-analog-joystick";
        label = "JOYSTICK";
        io-channels = <&adc 7>, <&adc 6>;
        io-channel-names = "X-AXIS", "Y-AXIS";
        max-mv = <1650>;
        status = "okay";

        joystick_input_listener {
            compatible = "zmk,input-listener";
            device = <&joystick>;
        };
    };
};

&adc {
    status = "okay";
};

&gpiote {
    status = "okay";
};

&gpio0 {
    status = "okay";
};

&gpio1 {
    status = "okay";
};

&usbd {
    status = "okay";
    cdc_acm_uart: cdc_acm_uart {
        compatible = "zephyr,cdc-acm-uart";
        label = "CDC_ACM_0";
    };
};


&flash0 {
    /*
     * For more information, see:
     * http://docs.zephyrproject.org/latest/devices/dts/flash_partitions.html
     */
    partitions {
        compatible = "fixed-partitions";
        #address-cells = <1>;
        #size-cells = <1>;

        sd_partition: partition@0 {
            label = "softdevice";
            reg = <0x00000000 0x00026000>;
        };
        code_partition: partition@26000 {
            label = "code_partition";
            reg = <0x00026000 0x000c6000>;
        };

        /*
         * The flash starting at 0x000ec000 and ending at
         * 0x000f3fff is reserved for use by the application.
         */

        /*
         * Storage partition will be used by FCB/LittleFS/NVS
         * if enabled.
         */
        storage_partition: partition@ec000 {
            label = "storage";
            reg = <0x000ec000 0x00008000>;
        };

        boot_partition: partition@f4000 {
            label = "adafruit_boot";
            reg = <0x000f4000 0x0000c000>;
        };
    };
};

&pinctrl {
  spi3_default: spi3_default {
    group1 {
      psels = <NRF_PSEL(SPIM_SCK, 0, 26)>,
        <NRF_PSEL(SPIM_MOSI, 0, 8)>;
    };
  };

  spi3_sleep: spi3_sleep {
    group1 {
      psels = <NRF_PSEL(SPIM_SCK, 0, 26)>,
        <NRF_PSEL(SPIM_MOSI, 0, 8)>;
        low-power-enable;
    };
  };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";

    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    cs-gpios = <&gpio0 6 GPIO_ACTIVE_LOW>;

    shift_reg: 595@0 {
        compatible = "zmk,gpio-595";
        status = "okay";
        gpio-controller;
        spi-max-frequency = <200000>;
        reg = <0>;
        label = "74HC595";
        #gpio-cells = <2>;
        ngpios = <16>;
    };
};